<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <help_text>// Uncomment the following line to change the fontsize and font:
fontsize=14
fontfamily=Monospaced //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>380</x>
      <y>680</y>
      <w>320</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Incomplete&gt;&gt;
/Renderer/
{abstract}
--

--
/+ Render()/
--
-- Hold the shader program
-- Draw world objects
-- Optionally manage a window</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1120</x>
      <y>680</y>
      <w>440</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>WorldObject
--
+ Id: Long
+ Enabled: Boolean
# Material
# YawPitchRoll: Real[3]
# ScaleXYZ: Real[3]
--
+ WorldObject(source: Mesh[1..n], Material[1..n])

+ SetRotation(YawPitchRoll: Real[3])
+ GetRotation(): Real[3]
+ SetScale(XYZ: Real[3])
+ GetScale(): Real[3]
+ GetVertexArrays(): VertexArrayObject[0..n]
--
-- Store VAO IDs referencing meshes
-- Render VAOs without transforming their meshes
   (transformations are off-sourced to shaders through
    uniforms)
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1840</x>
      <y>930</y>
      <w>220</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>GlVertex
--
+ Position:  Real[3]
+ Normal:    Real[3]
+ Color:     Real[4]
bg=cyan</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>960</x>
      <y>800</y>
      <w>190</w>
      <h>750</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=0..n</panel_attributes>
    <additional_attributes>170.0;720.0;10.0;720.0;10.0;10.0;160.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1740</x>
      <y>1110</y>
      <w>420</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>Mesh
--

--
+ Transform(glm::Matrix4)
--
-- Store raw vertices
-- Apply transformation matrices to existing vertices data
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1940</x>
      <y>1000</y>
      <w>30</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>420</x>
      <y>460</y>
      <w>280</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>ShaderProgram
--
+ Id: Long
--
+ Use()
+ GetAttributeLocation(): Int
--
-- Hold the GLSL shaders
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>550</x>
      <y>570</y>
      <w>40</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
1</panel_attributes>
    <additional_attributes>10.0;110.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>420</x>
      <y>0</y>
      <w>280</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>Shader
{abstract}
--
+ Id: Long
--
+ Shader(source: String)
--
Responsibilities
-- Compile the GLSL shader
-- Hold the associated ID</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>80</x>
      <y>270</y>
      <w>280</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>VertexShader
--
+ Id: Long
--
+ VertexShader(source: String)
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>760</x>
      <y>270</y>
      <w>280</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>FragmentShader
--
+ Id: Long
--
+ FragmentShader(source: String)
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>420</x>
      <y>270</y>
      <w>280</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>GeometryShader
--
+ Id: Long
--
+ GeometryShader(source: String)
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>350</x>
      <y>150</y>
      <w>230</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;120.0;210.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>550</x>
      <y>150</y>
      <w>30</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>550</x>
      <y>150</y>
      <w>230</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>210.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>210</x>
      <y>340</y>
      <w>230</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
1</panel_attributes>
    <additional_attributes>210.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>550</x>
      <y>340</y>
      <w>60</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
0..1</panel_attributes>
    <additional_attributes>10.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>690</x>
      <y>340</y>
      <w>230</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
1</panel_attributes>
    <additional_attributes>10.0;120.0;210.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1110</x>
      <y>1050</y>
      <w>460</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>StaticWorldObject
--

--
+ StaticWorldObject(data: Mesh[1..n], Material[1..n])

+ SetRotation(YawPitchRoll: Real[3])
+ GetRotation(): Real[3]
+ SetScale(XYZ: Real[3])
+ GetScale(): Real[3]

- UpdateVao()
--
-- Store and modify mesh copies
-- Render raw meshes
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1330</x>
      <y>950</y>
      <w>30</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;100.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1560</x>
      <y>1150</y>
      <w>200</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;180.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2130</x>
      <y>1080</y>
      <w>90</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>30.0;40.0;70.0;40.0;70.0;10.0;10.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1550</x>
      <y>790</y>
      <w>210</w>
      <h>380</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=1
represents ^</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;10.0;90.0;350.0;190.0;350.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1430</x>
      <y>470</y>
      <w>290</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>VertexArrayObject
--
+ Id: Long
--
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>950</x>
      <y>470</y>
      <w>280</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>VertexBufferObject
--
+ Id: Long
--
+ VertexAttribPointer()
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1220</x>
      <y>490</y>
      <w>230</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=-
m1=3
m2=1
belongs to &gt;</panel_attributes>
    <additional_attributes>10.0;20.0;210.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1330</x>
      <y>540</y>
      <w>270</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=n</panel_attributes>
    <additional_attributes>10.0;140.0;10.0;90.0;250.0;40.0;250.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>330</x>
      <y>1440</y>
      <w>460</w>
      <h>360</h>
    </coordinates>
    <panel_attributes>/Level/
--
+ Ari: AssetResourceIdentifier
+ ChunkSize: Int
# ActiveChunk: Chunk
- ChunkLoader
--
Level(Ari, DesiredChunkSize: Int)
Level(Level, DesiredChunkSize: Int)

+ PutWorldObject(Xz: Int[2], WorldObject)
+ GetObjectAt(TileXz: Int[2]): WorldObject[0..1]
+ GetChunk(ChunkXz: Int[2]): Chunk[0..1]
+ GetChunkOf(TileXz: Int[2]): Chunk[0..1]
+ GetLoadedChunks(ChunkXz: Int[2]): Chunk[0..*]

/+ HintPosition(TileXz: Int[2])/
/+ GetRendererType(): RendererType/
--
-- Intermediate between the loaded chunks, the world
   objects, the chunk loader and the system logic
-- Load and store chunks and world objects</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>690</x>
      <y>780</y>
      <w>450</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=0..n
m2=0..n</panel_attributes>
    <additional_attributes>10.0;10.0;430.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>570</x>
      <y>1130</y>
      <w>280</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Enumeration&gt;&gt;
RendererType
--

--
bg=cyan</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>640</x>
      <y>1200</y>
      <w>200</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=0..n
should be rendered by ^</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;240.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>640</x>
      <y>910</y>
      <w>160</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=1..n
refers to the
instance type of ^</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;220.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>420</x>
      <y>910</y>
      <w>80</w>
      <h>550</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..1
m2=1

renders</panel_attributes>
    <additional_attributes>10.0;530.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>1950</y>
      <w>420</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>ChunkLevel
--

--
+ HintPosition(TileXz: Int[2])
+ GetRendererType(): RendererType
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>960</x>
      <y>0</y>
      <w>830</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>The names for attributes and operations are conceptual:
their actual names in the code will be different.
fontsize=24
halign=center
bg=gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1130</x>
      <y>1440</y>
      <w>420</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>Chunk
--

--
+ PutWorldObject(Xz: Int[2], WorldObject)
+ GetObjectAt(Xz: Int[2])
+ GetObjects(): Int[0..*]
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>780</x>
      <y>1550</y>
      <w>370</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=0..*
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;350.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>780</x>
      <y>880</y>
      <w>360</w>
      <h>670</h>
    </coordinates>
    <panel_attributes>lt=-
m1=0..*
m2=1
manages ^</panel_attributes>
    <additional_attributes>340.0;10.0;250.0;10.0;250.0;230.0;80.0;640.0;10.0;640.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1200</x>
      <y>530</y>
      <w>70</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=()-
</panel_attributes>
    <additional_attributes>50.0;10.0;50.0;50.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1050</x>
      <y>580</y>
      <w>160</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>3:
Position, Normal
and Color</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>690</x>
      <y>1950</y>
      <w>420</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>MirroredLevel
--
+ LevelRegionSize: Int
--
+ GetChunk(ChunkXz: Int[2]): Chunk[0..1]
+ GetChunkOf(TileXz: Int[2]): Chunk[0..1]
+ HintPosition(TileXz: Int[2])
+ GetRendererType(): RendererType
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>410</x>
      <y>1790</y>
      <w>150</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;160.0;130.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>570</x>
      <y>1790</y>
      <w>140</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>120.0;160.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>110</x>
      <y>1440</y>
      <w>210</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>The Level may refuse
to load a chunk, for
example if it's a
ChunkLevel and the
requested chunk does
not exist</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1800</x>
      <y>720</y>
      <w>260</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>Material
--
+ Transparency:       Real
+ RoughReflectivity:  Real
+ SmoothReflectivity: Real
bg=cyan</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1550</x>
      <y>750</y>
      <w>270</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1..*</panel_attributes>
    <additional_attributes>10.0;10.0;250.0;10.0</additional_attributes>
  </element>
</diagram>
